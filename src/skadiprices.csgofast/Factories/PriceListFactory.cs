using Newtonsoft.Json;
using skadiprices.csgofast.Models;
using skadiprices.csgofast.Models.Json;
using skadiprices.csgofast.Interfaces;
using System.Collections.Generic;

namespace skadiprices.csgofast.Factories
{
    /// <summary>
    /// Class to create the price list in an easy way. Its just a class which is
    /// just existing for creating the pricelist.
    /// </summary>
    internal static class PriceListFactory
    {
        /// <summary>
        /// Method to create the price list.
        /// </summary>
        /// <example>
        /// var priceList = PriceListFactory.Create();
        /// </example>
        /// <returns>
        /// An implemented instance of the interface. 
        /// For more information lookup: <see cref="ISkadiPriceList"/>.
        /// </returns>
        internal static ISkadiPriceList Create()
        {
            var responseBody =
                RequestFactory.Create().Content.ReadAsStringAsync().Result;
            var csgoFastRoot =
                JsonConvert.DeserializeObject<CsGoFastRoot>(responseBody);
            return ConvertCsGoFastRootToPriceList(csgoFastRoot);
        }

        /// <summary>
        /// Method to convert the result of the csgofast to the globally defined model.
        /// </summary>
        /// <param name="csGoFastRoot">Root of the object generated by the json response.</param>
        /// <returns>
        /// An implemented instance of the interface. 
        /// For more information lookup: <see cref="ISkadiPriceList"/>.
        /// </returns>
        private static ISkadiPriceList ConvertCsGoFastRootToPriceList(
            CsGoFastRoot csGoFastRoot)
        {
            var priceList = new PriceList();
            priceList.Items = new List<ISkadiPriceItem>();
            foreach (KeyValuePair<string, decimal> entry in csGoFastRoot.Prices)
            {
                priceList.Items.Add(new CsGoFastItem
                {
                    MarketHashName = entry.Key,
                    Price = entry.Value
                });
            }
            return priceList;
        }
    }
}
